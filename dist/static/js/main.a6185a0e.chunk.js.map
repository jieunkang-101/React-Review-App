{"version":3,"sources":["components/dashboard/Notifications.jsx","components/Review/Review.jsx","components/Review/ReviewList.jsx","components/Review/UserPage.jsx","components/dashboard/Dashboard.jsx","components/auth/SignUp.jsx","actions/authActions.jsx","actions/ActionTypes.jsx","components/auth/SignIn.jsx","components/layout/SignedInLinks.jsx","components/layout/SignedOutLinks.jsx","components/layout/NavBar.jsx","components/Review/ReviewDetail.jsx","actions/reviewActions.jsx","components/Review/NewReviewForm.jsx","components/Review/EditReviewForm.jsx","components/App.jsx","serviceWorker.js","reducers/authReducer.jsx","reducers/reviewReducer.jsx","reducers/index.jsx","firebase.jsx","index.jsx"],"names":["Notifications","props","notifications","className","map","item","key","id","user","content","moment","time","toDate","fromNow","Review","review","movieTitle","rating","authorFirstName","authorLastName","createAt","calendar","ReviewList","reviews","to","connect","state","console","log","auth","firebase","uid","authorId","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","SignUp","email","password","firstName","lastName","handleChange","e","setState","target","value","handleSubmit","preventDefault","signUp","authError","onSubmit","htmlFor","type","onChange","dispatch","newUser","getSate","getFirebase","getFirestore","createUserWithEmailAndPassword","then","response","doc","set","initials","catch","err","SignIn","signIn","credentials","signInWithEmailAndPassword","signOut","href","onClick","profile","SignedOutLinks","links","ownProps","match","params","data","reviewId","reviewActionError","deleteReview","getState","delete","selectReview","get","exists","NewReviewForm","createReview","history","push","name","placeholder","add","Date","EditReviewForm","updateReview","reviewToUpdate","Object","keys","update","App","exact","path","component","ReviewDetail","UserPage","Boolean","window","location","hostname","initState","authReducer","action","message","selectedReview","reviewReducer","assign","rootReducer","combineReducers","firestoreReducer","firebaseReducer","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","__REDUX_DEVTOOLS_EXTENSION__","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a6185a0e.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>- {item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nfunction Review({review}) {\n  return (\n    <div className=\"card z-depth-0 review\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{review.movieTitle}</span>\n        <p>{review.rating}</p>\n        <p className=\"grey-text\">Posted by {review.authorFirstName} {review.authorLastName}</p>\n        <p className=\"grey-text\">{moment(review.createAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Review;","import React from 'react';\nimport Review from './Review';\nimport { Link } from 'react-router-dom';\n\nconst ReviewList = ({reviews}) => {\n  return (\n    <div className=\"review-list section\">\n      { reviews && reviews.map(review => {\n        return (\n          <Link to={'/review/' + review.id} key={review.id}>\n            <Review review={review} />\n          </Link>    \n        )\n      })}\n    </div>\n  )\n}\n\nexport default ReviewList;","import React from 'react';\nimport Review from './Review';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst UserPage = (props) => {\n  const { auth } = props;\n\n  if (auth.uid) {\n    return (\n      <div className=\"section\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">My Reviews</span>\n            {props.reviews && props.reviews.map(review => {\n              if (review.authorId === auth.uid) {\n                return (\n                  <Link to={'/review/' + review.id} key={review.id}>\n                  <Review review={review} />\n                  </Link>\n                );\n              } \n              return null;\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return null;\n  }\n}  \n\nconst mapStateToProps = (state) => {\n  console.log(\"myState\", state);\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nexport default connect(mapStateToProps)(UserPage);","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ReviewList from '../Review/ReviewList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport UserPage from '../Review/UserPage';\n\n\nclass Dashboard extends Component {\n  \n  render(){\n    const { reviews, auth, notifications } = this.props;\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ReviewList reviews={reviews} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n            <UserPage reviews={reviews} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    reviews: state.firestore.ordered.reviews,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'reviews', orderBy: ['createAt', 'desc'] },\n    { collection: 'notifications', limit: 10, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard); ","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../actions/authActions';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import * as c from './ActionTypes'\n\nexport const signIn = (credentials) => {\n  return (dispatch, getSate, {getFirebase}) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: c.LOGIN_SUCCESS })\n    }).catch((err) => {\n      dispatch({ type: c.LOGIN_ERROR, err })\n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getSate, {getFirebase}) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: c.SIGNOUT_SUCCESS })\n    });\n  }  \n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getSate, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((response) => {\n      return firestore.collection('users').doc(response.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: c.SIGNUP_SUCCESS })\n    }).catch((err) => {\n      dispatch({ type: c.SIGNUP_ERROR, err })\n    });\n  }  \n}","export const CREATE_REVIEW = 'CREATE_REVIEW';\nexport const CREATE_REVIEW_ERROR = 'CREATE_REVIEW_ERROR';\nexport const UPDATE_REVIEW = 'UPDATE_REVIEW';\nexport const UPDATE_REVIEW_ERROR = 'UPDATE_REVIEW_ERROR';\nexport const DELETE_REVIEW = 'DELETE_REVIEW';\nexport const DELETE_REVIEW_ERROR = 'DELETE_REVIEW_ERROR';\nexport const SELECT_REVIEW = 'SELECT_REVIEW';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (credentials) => dispatch(signIn(credentials))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../actions/authActions';\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/create'>Add New Review</NavLink></li>\n      {/* <li><NavLink to='/userpage'>My Reviews</NavLink></li> */}\n      <li><a href=\"http://localhost:3000/\" onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n        {props.profile.initials}\n      </NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/signup'>Signup</NavLink></li>\n      <li><NavLink to='/signin'>Login</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n  return (\n  <nav className=\"nav-wrapper grey darken-3\">\n    <div className=\"container\">\n      <Link to='/' className=\"brand-logo\">MovieReview</Link>\n      { links }\n    </div>\n  </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { NavLink } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport { deleteReview, selectReview } from '../../actions/reviewActions';\n\nfunction ReviewDetail(props) {\n  const { review, auth, reviewId, reviewActionError } = props;\n  \n  if (!auth.uid) return <Redirect to='/signin' />\n \n  if (review) {\n    return (\n      <div className=\"container section review-detail\">\n        <div className=\"card z-depth-o\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{review.movieTitle}</span>\n            <p>{review.rating}</p>\n            <p>{review.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {review.authorFirstName} {review.authorLastName}</div>\n            <div>{moment(review.createAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n          <button onClick={props.selectReview(reviewId)} className='btn pink lighten-1 z-depth-0'>  \n            <NavLink to={'/edit'}>Updete Review</NavLink>\n          </button>\n          <button onClick={props.deleteReview} className='btn pink lighten-1 z-depth-0'>Delete Review</button>\n          <div className=\"red-text center\">\n            { reviewActionError ? <p>{reviewActionError}</p> : null }\n          </div>\n      </div>\n    )\n  } else {\n    return (\n      // <Redirect to='/' />\n      <div className=\"container center\">\n        <p>Loading review...</p>\n      </div>\n    )\n  }  \n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const reviews = state.firestore.data.reviews;\n  const review = reviews ? reviews[id] : null;\n  return {\n    review: review,\n    auth: state.firebase.auth,\n    reviewId: id,\n    reviewActionError: state.review.reviewActionError\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const id = ownProps.match.params.id;\n  return {\n    deleteReview: () => dispatch(deleteReview(id)),\n    selectReview: () => dispatch(selectReview(id))\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect([\n    { collection: 'reviews' }\n  ])\n)(ReviewDetail);","import * as c from './ActionTypes'\n\nexport const createReview = (review) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('reviews').add({\n      ...review, \n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createAt: new Date()\n    }).then(() => {\n      dispatch({ type: c.CREATE_REVIEW, review });\n    }).catch((err) => {\n      dispatch({ type: c.CREATE_REVIEW_ERROR, err });\n    })\n  }\n};\n\nexport const updateReview = (reviewToUpdate) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const review = getState().firestore.data.reviews;\n    // console.log(\"test review\", review);\n    const reviewId = Object.keys(review)[0];\n    // console.log(\"id\", reviewId);\n    firestore.collection('reviews').doc(reviewId).update({ \n      rating: reviewToUpdate.rating,\n      content: reviewToUpdate.content,\n      createAt: new Date()\n    }).then(() => {\n      console.log(\"Document successfully updated!\");\n      dispatch({ type: c.UPDATE_REVIEW, reviewToUpdate });\n    }).catch((err) => {\n      dispatch({ type: c.UPDATE_REVIEW_ERROR, err })\n    });\n  }\n}    \n\nexport const deleteReview = (id) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n\n    firestore.collection('reviews').doc(id).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n      dispatch({ type: c.DELETE_REVIEW })\n    }).catch((err) => {\n      dispatch({ type: c.DELETE_REVIEW_ERROR, err})\n    })\n  }  \n}\n\nexport const selectReview = (id) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const docRef = firestore.collection('reviews').doc(id)\n\n    docRef.get().then((doc) => {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }  \n      dispatch({ type: c.SELECT_REVIEW })\n    });\n  }  \n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createReview } from '../../actions/reviewActions';\nimport { Redirect } from 'react-router-dom';\n\nclass NewReviewForm extends Component {\n  state = {\n    movieTitle: '',\n    rating: '',\n    content: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createReview(this.state);\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className=\"container\">\n        <form onSubmit = { this.handleSubmit } className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Add New Review</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"movieTitle\">Movie Title</label>\n            <input type=\"text\" id=\"movieTitle\" onChange={this.handleChange} />\n          </div>\n          <label>\n            <input type=\"radio\" id=\"rating\" name=\"rating\" value=\"1\" onChange={this.handleChange} />\n            <span>1</span>\n          </label>\n          <label>\n            <input type=\"radio\" id=\"rating\" name=\"rating\" value=\"2\" onChange={this.handleChange} />\n            <span>2</span>\n          </label>\n          <label>\n            <input type=\"radio\" id=\"rating\" name=\"rating\" value=\"3\" onChange={this.handleChange} />\n            <span>3</span>\n          </label>\n          <label>\n            <input type=\"radio\" id=\"rating\" name=\"rating\" value=\"4\" onChange={this.handleChange} />\n            <span>4</span>\n          </label>\n          <label>\n            <input type=\"radio\" id=\"rating\" name=\"rating\" value=\"5\" onChange={this.handleChange} />\n            <span>5</span>\n          </label>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\"  placeholder='What did you think of the movie?(optional)' onChange={this.handleChange}></textarea>\n          </div>  \n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0 waves-effect\">Submit<i className=\"material-icons right\">send</i></button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst  mapDispatchToProps = (dispatch) => {\n  return {\n    createReview: (review) => dispatch(createReview(review))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewReviewForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateReview } from '../../actions/reviewActions';\n\nclass EditReviewForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rating: '',\n      content: ''\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.updateReview(this.state);\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <form onSubmit = { this.handleSubmit } className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Update Review</h5>\n          <label>\n            <input type=\"radio\" id=\"rating\" name=\"rating\" value=\"1\" onChange={this.handleChange} />\n            <span>1</span>\n          </label>\n          <label>\n            <input type=\"radio\" id=\"rating\" name=\"rating\" value=\"2\" onChange={this.handleChange} />\n            <span>2</span>\n          </label>\n          <label>\n            <input type=\"radio\" id=\"rating\" name=\"rating\" value=\"3\" onChange={this.handleChange} />\n            <span>3</span>\n          </label>\n          <label>\n            <input type=\"radio\" id=\"rating\" name=\"rating\" value=\"4\" onChange={this.handleChange} />\n            <span>4</span>\n          </label>\n          <label>\n            <input type=\"radio\" id=\"rating\" name=\"rating\" value=\"5\" onChange={this.handleChange} />\n            <span>5</span>\n          </label>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\"  placeholder='What did you think of the movie?(optional)' onChange={this.handleChange}></textarea>\n          </div>  \n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0 waves-effect\">Update<i className=\"material-icons right\">update</i></button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst  mapDispatchToProps = (dispatch) => {\n  return {\n    updateReview: (review) => dispatch(updateReview(review))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(EditReviewForm);","import React from \"react\";\nimport Dashboard from './dashboard/Dashboard';\nimport SignUp from \"./auth/SignUp\";\nimport SignIn from \"./auth/SignIn\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport '../index.css';\nimport Navbar from \"./layout/NavBar\";\nimport ReviewDetail from \"./Review/ReviewDetail\";\nimport NewReviewForm from './Review/NewReviewForm';\nimport EditReviewForm from './Review/EditReviewForm';\nimport UserPage from './Review/UserPage';\n\nfunction App(){\n  return ( \n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/review/:id' component={ReviewDetail} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={NewReviewForm} />\n          <Route path=\"/edit\" component={EditReviewForm} />\n          <Route path=\"/userpage\" component={UserPage} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as c from './../actions/ActionTypes';\n\nconst initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type) {\n    case c.LOGIN_ERROR:\n      return {\n        ...state, \n        authError: action.err.message\n      }\n    case c.LOGIN_SUCCESS:\n      console.log('Login success');\n      return {\n        ...state,\n        authError: null\n      }  \n    case c.SIGNOUT_SUCCESS:\n      console.log('Signout success');\n      return state;  \n    case c.SIGNUP_SUCCESS:\n      console.log('Signup success');\n      return {\n        ...state,\n        authError: null\n      }   \n    case c.SIGNUP_ERROR:\n      console.log('Signup error');\n      return {\n        ...state,\n        authError: action.err.message\n      } \n    default:\n      return state; \n  }        \n};\n\nexport default authReducer;","import * as c from './../actions/ActionTypes';\n\nconst initState = {\n  selectedReview: null,\n  reviewActionError: null\n};\n\nconst reviewReducer = (state=initState, action) => {\n  const { id } = action;\n  switch (action.type) {\n    case c.CREATE_REVIEW:\n      console.log(\"created review\", action.review);\n      return state;\n    case c.CREATE_REVIEW_ERROR:\n      console.log(\"create review error\", action.err);\n      return {\n        ...state,\n        reviewActionError: action.err.message\n      } \n    case c.SELECT_REVIEW:\n      return Object.assign({}, state, { selectedReview: id });  \n    case c.UPDATE_REVIEW:\n      console.log(\"updated review\", action.review);\n      return state;\n    case c.UPDATE_REVIEW_ERROR:\n      console.log(\"update review error\", action.err);\n      return {\n        ...state,\n        reviewActionError: action.err.message\n      }   \n    case c.DELETE_REVIEW:\n      console.log(\"deleted review\", action.review);   \n    case c.DELETE_REVIEW_ERROR:\n      console.log(\"delete review error\", action.err);\n      return {\n        ...state,\n        reviewActionError: action.err.message\n      } \n    default:\n      return state;     \n  }\n};\n\nexport default reviewReducer;","import authReducer from './authReducer';\nimport reviewReducer from './reviewReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  review: reviewReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;","import * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID \n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from \"./firebase\";\nimport 'firebase/auth';\nimport thunk from 'redux-thunk';\n// import middlewareLogger from './middleware/middleware-logger';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    // applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase }), middlewareLogger),\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: {\n    userProfile: \"users\",\n    useFirestoreForProfile: true,\n    attachAuthIsReady: true\n    },\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider { ...rrfProps }>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}